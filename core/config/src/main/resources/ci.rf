<?xml version="1.0" encoding="UTF-8"?> 
<process xmlns="http://drools.org/drools-5.0/process"
         xmlns:xs="http://www.w3.org/2001/XMLSchema-instance"
         xs:schemaLocation="http://drools.org/drools-5.0/process drools-processes-5.0.xsd"
         type="RuleFlow" name="ci" id="ci" package-name="org.openengsb" >

  <header>
    <variables>
      <variable name="buildEndEvent" >
        <type name="org.drools.process.core.datatype.impl.type.ObjectDataType" className="org.openengsb.core.api.Event" />
      </variable>
      <variable name="reportId" >
        <type name="org.drools.process.core.datatype.impl.type.StringDataType" />
      </variable>
      <variable name="processId" >
        <type name="org.drools.process.core.datatype.impl.type.ObjectDataType" className="Long" />
      </variable>
      <variable name="deleteHack" >
        <type name="org.drools.process.core.datatype.impl.type.ObjectDataType" className="File" />
      </variable>
      <variable name="processSuccess" >
        <type name="org.drools.process.core.datatype.impl.type.BooleanDataType" />
        <value>false</value>
      </variable>
      <variable name="buildStartEvent" >
        <type name="org.drools.process.core.datatype.impl.type.ObjectDataType" className="org.openengsb.core.api.Event" />
      </variable>
      <variable name="testEndEvent" >
        <type name="org.drools.process.core.datatype.impl.type.ObjectDataType" className="org.openengsb.core.api.Event" />
      </variable>
      <variable name="deployEndEvent" >
        <type name="org.drools.process.core.datatype.impl.type.ObjectDataType" className="org.openengsb.core.api.Event" />
      </variable>
    </variables>
  </header>

  <nodes>
    <eventNode id="137" name="DeployFail" x="21" y="973" width="126" height="64" variableName="deployEndEvent" scope="external" >
      <eventFilters>
        <eventFilter type="eventType" eventType="DeployFailEvent" />
      </eventFilters>
    </eventNode>
    <start id="1" name="Start" x="147" y="16" width="80" height="64" />
    <actionNode id="136" name="Deploy" x="238" y="880" width="80" height="64" >
        <action type="expression" dialect="mvel" >Long processId2 = (Long) kcontext.getVariable("processId");
deploy.deploy(testEndEvent.getPath(), processId2);</action>
    </actionNode>
    <eventNode id="138" name="DeploySuccess" x="16" y="784" width="144" height="64" variableName="deployEndEvent" scope="external" >
      <eventFilters>
        <eventFilter type="eventType" eventType="DeploySuccessEvent" />
      </eventFilters>
    </eventNode>
    <join id="140" name="Join" x="238" y="976" width="80" height="64" type="1" />
    <eventNode id="143" name="FlowStarted" x="259" y="16" width="116" height="64" >
      <eventFilters>
        <eventFilter type="eventType" eventType="FlowStartedEvent" />
      </eventFilters>
    </eventNode>
    <end id="6" name="End" x="304" y="1233" width="80" height="40" />
    <join id="142" name="Join" x="212" y="112" width="80" height="40" type="1" />
    <actionNode id="129" name="finishIt" x="281" y="1153" width="126" height="48" >
        <action type="expression" dialect="java" >Project project = projectManager.getCurrentContextProject();
String reportName = new SimpleDateFormat("dd.MM.yyyy HH:mm:ss:SSS").format(new Date());
Report r = report.generateReport(reportId, project.getId(), reportName);
Notification n = projectManager.createNotification();
String result;
Boolean success = (Boolean) kcontext.getVariable("processSuccess");
if(success == Boolean.TRUE){
	result = "SUCCESS";
	projectManager.updateCurrentContextProjectState(State.OK);
} else {
	result = "FAILURE";
	projectManager.updateCurrentContextProjectState(State.FAILURE);
}
n.setSubject("CIT workflow report - "+result);
String message = "OpenCIT finished executing CI and T workflow with result: "+ result +".\n\n";
List parts = r.getParts();
int maxLines = 200;
for(int i = 0; i &lt; parts.size(); i++) {
  ReportPart part = (ReportPart) parts.get(i);
  message = message + "Report Part: " + part.getPartName() + "\n";
  String partContent = new String(part.getContent());
  String[] split = partContent.split("\n");
  partContent = split.length &gt; maxLines ? "[...]\n" : "";
  partContent += StringUtils.join(split, "\n", Math.max(0,split.length - maxLines), split.length - 1);
  message = message + partContent + "\n\n";
}
n.setMessage(message);
n.setRecipient(project.getNotificationRecipient());
try {
    notification.notify(n);
} catch (Exception e) {
    Log log = LogFactory.getLog("CI&amp;T workflow");
    log.error("Error when sending notification:\n", e);
}
File deleteMe = (File) kcontext.getVariable("deleteHack");
if (deleteMe != null) {
    FileUtils.deleteDirectory(deleteMe);
}
projectManager.endProjectBuild(project);</action>
    </actionNode>
    <actionNode id="128" name="setStateToSuccess" x="83" y="880" width="123" height="64" >
        <action type="expression" dialect="java" >kcontext.setVariable("processSuccess", true);</action>
    </actionNode>
    <eventNode id="131" name="TestSuccess" x="37" y="688" width="123" height="64" variableName="testEndEvent" scope="external" >
      <eventFilters>
        <eventFilter type="eventType" eventType="TestSuccessEvent" />
      </eventFilters>
    </eventNode>
    <eventNode id="130" name="TestFail" x="304" y="688" width="116" height="64" variableName="testEndEvent" scope="external" >
      <eventFilters>
        <eventFilter type="eventType" eventType="TestFailEvent" />
      </eventFilters>
    </eventNode>
    <join id="133" name="Join" x="192" y="784" width="80" height="64" type="1" />
    <split id="132" name="Split" x="192" y="688" width="80" height="64" type="1" />
    <actionNode id="135" name="Start Tests" x="177" y="616" width="111" height="40" >
        <action type="expression" dialect="mvel" >Long processId2 = (Long) kcontext.getVariable("processId");
test.runTestsProcessId(buildEndEvent.getPath(), processId2)</action>
    </actionNode>
    <actionNode id="15" name="startFlow" x="173" y="184" width="159" height="64" >
        <action type="expression" dialect="java" >Long processIdValue = kcontext.getProcessInstance().getId();
kcontext.setVariable("processId", processIdValue);
String reportIdValue = report.collectData();
kcontext.setVariable("reportId", reportIdValue);</action>
    </actionNode>
    <join id="134" name="Join" x="304" y="784" width="80" height="64" type="1" />
    <actionNode id="16" name="Start build" x="196" y="280" width="112" height="64" >
        <action type="expression" dialect="java" >Long processId2 = (Long) kcontext.getVariable("processId");
OpenEngSBFileModel m = scm.export();
File f = m != null ? m.getFile() : null;
kcontext.setVariable("deleteHack", f);
build.build(m, processId2);</action>
    </actionNode>
    <join id="20" name="jointoSendReport" x="283" y="1072" width="123" height="49" type="2" />
    <actionNode id="144" name="Mark Project Building" x="74" y="106" width="80" height="48" >
        <action type="expression" dialect="java" >Project project = projectManager.getCurrentContextProject();
projectManager.startProjectBuild(project);</action>
    </actionNode>
    <join id="108" name="Join" x="406" y="544" width="80" height="40" type="1" />
    <eventNode id="107" name="BuildSuccess" x="25" y="448" width="187" height="64" variableName="buildEndEvent" scope="external" >
      <eventFilters>
        <eventFilter type="eventType" eventType="BuildSuccessEvent" />
      </eventFilters>
    </eventNode>
    <eventNode id="119" name="BuildFail" x="463" y="448" width="187" height="64" variableName="buildEndEvent" scope="external" >
      <eventFilters>
        <eventFilter type="eventType" eventType="BuildFailEvent" />
      </eventFilters>
    </eventNode>
    <join id="125" name="Join" x="297" y="376" width="80" height="40" type="1" />
    <eventNode id="123" name="BuildStart" x="340" y="280" width="159" height="64" variableName="buildStartEvent" scope="external" >
      <eventFilters>
        <eventFilter type="eventType" eventType="BuildStartEvent" />
      </eventFilters>
    </eventNode>
    <join id="121" name="Join" x="192" y="544" width="80" height="40" type="1" />
    <split id="120" name="Split" x="244" y="448" width="187" height="64" type="1" />
  </nodes>

  <connections>
    <connection from="133" to="136" />
    <connection from="136" to="140" />
    <connection from="128" to="140" />
    <connection from="129" to="6" />
    <connection from="143" to="142" />
    <connection from="144" to="142" />
    <connection from="20" to="129" />
    <connection from="138" to="128" />
    <connection from="132" to="133" />
    <connection from="131" to="133" />
    <connection from="135" to="132" />
    <connection from="121" to="135" />
    <connection from="142" to="15" />
    <connection from="132" to="134" />
    <connection from="130" to="134" />
    <connection from="15" to="16" />
    <connection from="108" to="20" bendpoints="[444,724]" />
    <connection from="137" to="20" />
    <connection from="134" to="20" />
    <connection from="140" to="20" />
    <connection from="1" to="144" />
    <connection from="120" to="108" />
    <connection from="119" to="108" />
    <connection from="16" to="125" />
    <connection from="123" to="125" />
    <connection from="120" to="121" />
    <connection from="107" to="121" />
    <connection from="125" to="120" />
  </connections>

</process>